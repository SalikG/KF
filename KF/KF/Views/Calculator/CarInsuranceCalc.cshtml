@using ASP.Helpers
@using KF.KFWCFServiceLibrary
@using Microsoft.Ajax.Utilities
@model KF.KFWCFServiceLibrary.InsuranceCalc
@using (Html.BeginForm("CarInsuranceCalc", "Calculator", FormMethod.Post, new { onsubmit="return validateForm()"}))
{
    for (int i = 0; i < Model.Insurances.Length; i++)
     {
         @Html.HiddenFor(model => model.Insurances[i].Name);
         @Html.HiddenFor(model => model.Insurances[i].Price)
     }
    <div id="leContainer">
        <div class="form-group">
            <div >
                @Html.EditorFor(model => model.Car.RegNr, new {htmlAttributes = new {@class = "form-control"}})
                <input type="submit" name="action" value="Søg" class="search"/>
            </div>
            <div class="form-check-inline">
                <label class="form-check-label">
                    @Html.RadioButtonFor(model => model.CarChange, "True")Bilskifte
                    @*<input type="radio" name="radioCarInsuranceType" class="form-check-input">Bilskifte*@
                </label>
            </div>
            <div class="form-check-inline">
                <label class="form-check-label">
                    @Html.RadioButtonFor(model => model.CarChange, "False")Ekstra bil

                    @*<input type="radio" name="radioCarInsuranceType" class="form-check-input">Ekstra bil*@
                </label>
            </div>
        </div>
        <div class="form-group">
            <label class="bold-lbl">Gule nummerplader:</label>
            <br />
            <div class="form-check-inline">
                <label class="form-check-label">
                    @Html.RadioButtonFor(model => model.Car.HasYellowPlates, "True")Ja
                </label>
            </div>
            <div class="form-check-inline">
                <label class="form-check-label">
                    @Html.RadioButtonFor(model => model.Car.HasYellowPlates, "False")Nej      
                </label>
            </div>
        </div>
        <h1 class="underlined-header">
            Bil info
        </h1>
        <table class="table">
            <tr>
                <td>Mærke: </td>
                <td>@(Model.Car?.Brand ?? "")</td>
            </tr>
            <tr>
                <td>Model: </td>
                <td>@(Model.Car?.Model ?? "")</td>
            </tr>
            <tr>
                <td>Årgang:</td>
                <td>@(Model.Car?.Year ?? 0)</td>
            </tr>
        </table>
        <h1 class="underlined-header">
            Dækninger
        </h1>

        <div class="row disabled">
            @{
                int responsibilityAndKaskoIndexOf = Array.IndexOf(Model.Insurances,
                    Model.Insurances.FirstOrDefault(i => i.Name == "Ansvar og Kasko"));
            }
            @Html.CheckBoxFor(model => model.Insurances[responsibilityAndKaskoIndexOf].IsSelected, new { id = "ResponsibilityAndKaskoCheckBox", @class = "hide" })
            @CalcHelper.InsuranceBtn("ResponsibilityAndKasko", "Ansvar og Kasko", "/Content/Icons/BilKasko_Blue.svg")
        </div>
        <h1 style="font-size: 20px; margin-bottom: 4px;">
            Tilvalgsdækninger
        </h1>
        <div class="row">
            @{
                int roadsideAssistanceIndexOf = Array.IndexOf(Model.Insurances,
                    Model.Insurances.FirstOrDefault(i => i.Name == "Vejhjælp"));
            }
            @Html.CheckBoxFor(model => model.Insurances[roadsideAssistanceIndexOf].IsSelected, new { id = "RoadsideAssistanceCheckBox", @class = "hide" })
            @CalcHelper.InsuranceBtn("RoadsideAssistance", "Vejhjælp", "/Content/Icons/BilVejhjaelp_Blue.svg")
            
            @{
                int driversSeatInsuranceIndexOf = Array.IndexOf(Model.Insurances,
                    Model.Insurances.FirstOrDefault(i => i.Name == "Førepladsdækning"));
            }
            @Html.CheckBoxFor(model => model.Insurances[driversSeatInsuranceIndexOf].IsSelected, new { id = "DriversSeatInsuranceCheckBox", @class = "hide" })
            @CalcHelper.InsuranceBtn("DriversSeatInsurance", "Førepladsdækning", "/Content/Icons/BilFoererpladsdaekning_Blue.svg")
            
            @{
                int extendedCarInsuranceIndexOf = Array.IndexOf(Model.Insurances,
                    Model.Insurances.FirstOrDefault(i => i.Name == "Udvidet bildækning"));
            }
            @Html.CheckBoxFor(model => model.Insurances[extendedCarInsuranceIndexOf].IsSelected, new { id = "ExtendedCarInsuranceCheckBox", @class = "hide" })
            @CalcHelper.InsuranceBtn("ExtendedCarInsurance", "Udvidet bildækning", "/Content/Icons/BilUdvidet_Blue.svg")
            
            @{
                int parkingInjuryIndexOf = Array.IndexOf(Model.Insurances,
                    Model.Insurances.FirstOrDefault(i => i.Name == "Parkeringsskade"));
            }
            @Html.CheckBoxFor(model => model.Insurances[parkingInjuryIndexOf].IsSelected, new { id = "ParkingInjuryCheckBox", @class = "hide" })
            @CalcHelper.InsuranceBtn("ParkingInjury", "Parkeringsskade", "/Content/Icons/Parkeringsskade_Blue.svg")
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label class="bold-lbl">Har bilen ekstraudstyr for over 24.865 kr?</label>
                        <br />
                        <div class="form-check-inline">
                            <label class="form-check-label">
                                @Html.RadioButtonFor(model => model.Car.ExtraEquipment, "True")Ja
                            </label>
                        </div>
                        <div class="form-check-inline">
                            <label class="form-check-label">
                                @Html.RadioButtonFor(model => model.Car.ExtraEquipment, "False")Nej      
                            </label>
                        </div>
                    </div>
                    @*@CalcHelper.RadioYesNo("extraEquipment", "Har bilen ekstraudstyr for over 24.865 kr?")*@
                </div>
                <div class="col">
                    Vælg selvrisiko
                    <div>
                        <input type="range" valueAsNumber="" class="form-control-range" name="range" id="rangeId" max="5" min="0" step="1" oninput="GetRangeNum()">
                    </div>

                    <div>
                        @Html.HiddenFor(model => model.Excess)
                        @Html.LabelFor(model => model.Excess, Model.Excess.ToString(),
                            new {style = "font-size: medium; margin - left: 10px", id = "rangeLblId", @for = "rangeId"})
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <input type="submit" name="action" class="btn btn-success" value="Beregn" id="calcBtn"/>
        </div>
    </div>
    <button type="button" class="btn btn-danger" onclick="openFixedBasketBox()" id="openBasketBtn"><i class="fa fa-bars"></i> Dine beregninger</button>
    <div class="fixed-basket-box" id="fixedBasket">
        <div class="row">
            <div class="col">
                <h3>Dine beregninger</h3>
            </div>
            <div class="col">
                <button type="button" class="btn btn-danger" onclick="closeFixedBasketBox()"><i class="fa fa-close"></i> Luk</button>
            </div>
        </div>
        <div class="row" style="border-bottom: 2px solid;">
            <div class="col-md-auto">
                <p >Årlige pris før rabat:</p>
            </div>
            <div class="col">
                <p class="fixed-basket-box-price">@Model.FullPriceWithoutDiscount kr.</p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-auto">
                <p>Rabat:</p>
            </div>
            <div class="col">
                <p class="fixed-basket-box-price">@Model.TotalDiscount %</p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-auto">
                <p>Din pris:</p>
            </div>
            <div class="col">
                <p class="fixed-basket-box-price">@Model.FullPriceWithDiscount kr.</p>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <button type="button" class="btn btn-secondary">Log in med nem id og køb</button>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <p>Andre muligheder</p>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <input type="submit" name="action" class="btn btn-info" value="Gem tilbud"/>
            </div>
            <div class="col">
                <button type="button" class="btn btn-info">Ring mig op</button>
            </div>
        </div>
    </div>
}
<script>
    function InsuranceBtnClickEvent(id) {
        if (document.getElementById(id.id).style.backgroundColor.toString() == "greenyellow") {
            document.getElementById(id.id).style.backgroundColor = "white";
            document.getElementById(id.id + "CheckBox").checked = false;

        }
        else {    
            document.getElementById(id.id).style.backgroundColor = "greenyellow";
            document.getElementById(id.id + "CheckBox").checked = true;
        }
    }

    function InitializeInsuranceButtons() {
        if (document.getElementById("ResponsibilityAndKaskoCheckBox").checked == false) {
            document.getElementById("ResponsibilityAndKasko").style.backgroundColor = "white";
        }
        else {    
            document.getElementById("ResponsibilityAndKasko").style.backgroundColor = "greenyellow";
        }

        if (document.getElementById("RoadsideAssistanceCheckBox").checked == false) {
            document.getElementById("RoadsideAssistance").style.backgroundColor = "white";
        }
        else {    
            document.getElementById("RoadsideAssistance").style.backgroundColor = "greenyellow";
        }

        if (document.getElementById("DriversSeatInsuranceCheckBox").checked == false) {
            document.getElementById("DriversSeatInsurance").style.backgroundColor = "white";
        }
        else {    
            document.getElementById("DriversSeatInsurance").style.backgroundColor = "greenyellow";
        }

        if (document.getElementById("ExtendedCarInsuranceCheckBox").checked == false) {
            document.getElementById("ExtendedCarInsurance").style.backgroundColor = "white";
        }
        else {    
            document.getElementById("ExtendedCarInsurance").style.backgroundColor = "greenyellow";
        }

        if (document.getElementById("ParkingInjuryCheckBox").checked == false) {
            document.getElementById("ParkingInjury").style.backgroundColor = "white";
        }
        else {    
            document.getElementById("ParkingInjury").style.backgroundColor = "greenyellow";
        }
    }

    InitializeInsuranceButtons();
    //InsuranceBtnClickEvent(document.getElementById("ResponsibilityAndKasko"));
    //InsuranceBtnClickEvent(document.getElementById("RoadsideAssistance"));
    //InsuranceBtnClickEvent(document.getElementById("DriversSeatInsurance"));
    //InsuranceBtnClickEvent(document.getElementById("ExtendedCarInsurance"));
    //InsuranceBtnClickEvent(document.getElementById("ParkingInjury"));

</script>